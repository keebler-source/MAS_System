<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="MAS_TEAM_3_477DataSet" targetNamespace="http://tempuri.org/MAS_TEAM_3_477DataSet1.xsd" xmlns:mstns="http://tempuri.org/MAS_TEAM_3_477DataSet1.xsd" xmlns="http://tempuri.org/MAS_TEAM_3_477DataSet1.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="MAS_TEAM_3_477ConnectionString1" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="MAS_TEAM_3_477ConnectionString1 (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.MAS_System_.Properties.Settings.GlobalReference.Default.MAS_TEAM_3_477ConnectionString1" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="alarmLogTableAdapter" GeneratorDataComponentClassName="alarmLogTableAdapter" Name="alarmLog" UserDataComponentName="alarmLogTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MAS_TEAM_3_477ConnectionString1 (Settings)" DbObjectName="MAS_TEAM_3_477.dbo.alarmLog" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[alarmLog] WHERE (([alarmID] = @Original_alarmID) AND ([sensorName] = @Original_sensorName) AND ([sensorVaule] = @Original_sensorVaule) AND ([threshold] = @Original_threshold) AND ([dateTime] = @Original_dateTime))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_alarmID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="alarmID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_sensorName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="sensorName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_sensorVaule" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="sensorVaule" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_threshold" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="threshold" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_dateTime" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="dateTime" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[alarmLog] ([alarmID], [sensorName], [sensorVaule], [threshold], [dateTime]) VALUES (@alarmID, @sensorName, @sensorVaule, @threshold, @dateTime);
SELECT alarmID, sensorName, sensorVaule, threshold, dateTime FROM alarmLog WHERE (alarmID = @alarmID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@alarmID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="alarmID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@sensorName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="sensorName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@sensorVaule" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="sensorVaule" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@threshold" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="threshold" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@dateTime" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="dateTime" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT alarmID, sensorName, sensorVaule, threshold, dateTime FROM dbo.alarmLog</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[alarmLog] SET [alarmID] = @alarmID, [sensorName] = @sensorName, [sensorVaule] = @sensorVaule, [threshold] = @threshold, [dateTime] = @dateTime WHERE (([alarmID] = @Original_alarmID) AND ([sensorName] = @Original_sensorName) AND ([sensorVaule] = @Original_sensorVaule) AND ([threshold] = @Original_threshold) AND ([dateTime] = @Original_dateTime));
SELECT alarmID, sensorName, sensorVaule, threshold, dateTime FROM alarmLog WHERE (alarmID = @alarmID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@alarmID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="alarmID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@sensorName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="sensorName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@sensorVaule" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="sensorVaule" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@threshold" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="threshold" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@dateTime" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="dateTime" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_alarmID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="alarmID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_sensorName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="sensorName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_sensorVaule" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="sensorVaule" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_threshold" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="threshold" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_dateTime" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="dateTime" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="alarmID" DataSetColumn="alarmID" />
              <Mapping SourceColumn="sensorName" DataSetColumn="sensorName" />
              <Mapping SourceColumn="sensorVaule" DataSetColumn="sensorVaule" />
              <Mapping SourceColumn="threshold" DataSetColumn="threshold" />
              <Mapping SourceColumn="dateTime" DataSetColumn="dateTime" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="loginLogTableAdapter" GeneratorDataComponentClassName="loginLogTableAdapter" Name="loginLog" UserDataComponentName="loginLogTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MAS_TEAM_3_477ConnectionString1 (Settings)" DbObjectName="MAS_TEAM_3_477.dbo.loginLog" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[loginLog] WHERE (([loginId] = @Original_loginId) AND ([username] = @Original_username) AND ([dateTime] = @Original_dateTime))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_loginId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="loginId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_username" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="username" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_dateTime" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="dateTime" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[loginLog] ([loginId], [username], [dateTime]) VALUES (@loginId, @username, @dateTime);
SELECT loginId, username, dateTime FROM loginLog WHERE (loginId = @loginId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@loginId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="loginId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@username" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="username" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@dateTime" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="dateTime" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT loginId, username, dateTime FROM dbo.loginLog</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[loginLog] SET [loginId] = @loginId, [username] = @username, [dateTime] = @dateTime WHERE (([loginId] = @Original_loginId) AND ([username] = @Original_username) AND ([dateTime] = @Original_dateTime));
SELECT loginId, username, dateTime FROM loginLog WHERE (loginId = @loginId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@loginId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="loginId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@username" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="username" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@dateTime" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="dateTime" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_loginId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="loginId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_username" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="username" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_dateTime" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="dateTime" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="loginId" DataSetColumn="loginId" />
              <Mapping SourceColumn="username" DataSetColumn="username" />
              <Mapping SourceColumn="dateTime" DataSetColumn="dateTime" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="sensorLogsTableAdapter" GeneratorDataComponentClassName="sensorLogsTableAdapter" Name="sensorLogs" UserDataComponentName="sensorLogsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MAS_TEAM_3_477ConnectionString1 (Settings)" DbObjectName="MAS_TEAM_3_477.dbo.sensorLogs" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[sensorLogs] WHERE (([sensorId] = @Original_sensorId) AND ([sensorName] = @Original_sensorName) AND ([sensorValue] = @Original_sensorValue) AND ([dateTime] = @Original_dateTime))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_sensorId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="sensorId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_sensorName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="sensorName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_sensorValue" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="sensorValue" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_dateTime" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="dateTime" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[sensorLogs] ([sensorId], [sensorName], [sensorValue], [dateTime]) VALUES (@sensorId, @sensorName, @sensorValue, @dateTime);
SELECT sensorId, sensorName, sensorValue, dateTime FROM sensorLogs WHERE (sensorId = @sensorId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@sensorId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="sensorId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@sensorName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="sensorName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@sensorValue" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="sensorValue" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@dateTime" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="dateTime" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT sensorId, sensorName, sensorValue, dateTime FROM dbo.sensorLogs</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[sensorLogs] SET [sensorId] = @sensorId, [sensorName] = @sensorName, [sensorValue] = @sensorValue, [dateTime] = @dateTime WHERE (([sensorId] = @Original_sensorId) AND ([sensorName] = @Original_sensorName) AND ([sensorValue] = @Original_sensorValue) AND ([dateTime] = @Original_dateTime));
SELECT sensorId, sensorName, sensorValue, dateTime FROM sensorLogs WHERE (sensorId = @sensorId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@sensorId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="sensorId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@sensorName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="sensorName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@sensorValue" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="sensorValue" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@dateTime" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="dateTime" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_sensorId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="sensorId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_sensorName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="sensorName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_sensorValue" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="sensorValue" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_dateTime" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="dateTime" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="sensorId" DataSetColumn="sensorId" />
              <Mapping SourceColumn="sensorName" DataSetColumn="sensorName" />
              <Mapping SourceColumn="sensorValue" DataSetColumn="sensorValue" />
              <Mapping SourceColumn="dateTime" DataSetColumn="dateTime" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="thresholdTableAdapter" GeneratorDataComponentClassName="thresholdTableAdapter" Name="threshold" UserDataComponentName="thresholdTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MAS_TEAM_3_477ConnectionString1 (Settings)" DbObjectName="MAS_TEAM_3_477.dbo.threshold" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[threshold] WHERE (([threshId] = @Original_threshId) AND ([threholdName] = @Original_threholdName) AND ([thresholdVaule] = @Original_thresholdVaule) AND ([dateTime] = @Original_dateTime) AND ([userName] = @Original_userName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_threshId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="threshId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_threholdName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="threholdName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_thresholdVaule" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="thresholdVaule" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_dateTime" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="dateTime" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_userName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[threshold] ([threshId], [threholdName], [thresholdVaule], [dateTime], [userName]) VALUES (@threshId, @threholdName, @thresholdVaule, @dateTime, @userName);
SELECT threshId, threholdName, thresholdVaule, dateTime, userName FROM threshold WHERE (threshId = @threshId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@threshId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="threshId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@threholdName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="threholdName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@thresholdVaule" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="thresholdVaule" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@dateTime" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="dateTime" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@userName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT threshId, threholdName, thresholdVaule, dateTime, userName FROM dbo.threshold</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[threshold] SET [threshId] = @threshId, [threholdName] = @threholdName, [thresholdVaule] = @thresholdVaule, [dateTime] = @dateTime, [userName] = @userName WHERE (([threshId] = @Original_threshId) AND ([threholdName] = @Original_threholdName) AND ([thresholdVaule] = @Original_thresholdVaule) AND ([dateTime] = @Original_dateTime) AND ([userName] = @Original_userName));
SELECT threshId, threholdName, thresholdVaule, dateTime, userName FROM threshold WHERE (threshId = @threshId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@threshId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="threshId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@threholdName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="threholdName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@thresholdVaule" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="thresholdVaule" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@dateTime" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="dateTime" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@userName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_threshId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="threshId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_threholdName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="threholdName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_thresholdVaule" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="thresholdVaule" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_dateTime" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="dateTime" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_userName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="threshId" DataSetColumn="threshId" />
              <Mapping SourceColumn="threholdName" DataSetColumn="threholdName" />
              <Mapping SourceColumn="thresholdVaule" DataSetColumn="thresholdVaule" />
              <Mapping SourceColumn="dateTime" DataSetColumn="dateTime" />
              <Mapping SourceColumn="userName" DataSetColumn="userName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="humiditySensorTableAdapter" GeneratorDataComponentClassName="humiditySensorTableAdapter" Name="humiditySensor" UserDataComponentName="humiditySensorTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MAS_TEAM_3_477ConnectionString1 (Settings)" DbObjectName="MAS_TEAM_3_477.dbo.humiditySensor" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[humiditySensor] WHERE (([humidityId] = @Original_humidityId) AND ([sensorName] = @Original_sensorName) AND ([sensorValue] = @Original_sensorValue) AND ([dateTime] = @Original_dateTime))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_humidityId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="humidityId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_sensorName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="sensorName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_sensorValue" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="sensorValue" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_dateTime" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="dateTime" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[humiditySensor] ([humidityId], [sensorName], [sensorValue], [dateTime]) VALUES (@humidityId, @sensorName, @sensorValue, @dateTime);
SELECT humidityId, sensorName, sensorValue, dateTime FROM humiditySensor WHERE (humidityId = @humidityId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@humidityId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="humidityId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@sensorName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="sensorName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@sensorValue" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="sensorValue" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@dateTime" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="dateTime" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT humidityId, sensorName, sensorValue, dateTime FROM dbo.humiditySensor</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[humiditySensor] SET [humidityId] = @humidityId, [sensorName] = @sensorName, [sensorValue] = @sensorValue, [dateTime] = @dateTime WHERE (([humidityId] = @Original_humidityId) AND ([sensorName] = @Original_sensorName) AND ([sensorValue] = @Original_sensorValue) AND ([dateTime] = @Original_dateTime));
SELECT humidityId, sensorName, sensorValue, dateTime FROM humiditySensor WHERE (humidityId = @humidityId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@humidityId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="humidityId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@sensorName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="sensorName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@sensorValue" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="sensorValue" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@dateTime" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="dateTime" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_humidityId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="humidityId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_sensorName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="sensorName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_sensorValue" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="sensorValue" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_dateTime" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="dateTime" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="humidityId" DataSetColumn="humidityId" />
              <Mapping SourceColumn="sensorName" DataSetColumn="sensorName" />
              <Mapping SourceColumn="sensorValue" DataSetColumn="sensorValue" />
              <Mapping SourceColumn="dateTime" DataSetColumn="dateTime" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="smokeSensorTableAdapter" GeneratorDataComponentClassName="smokeSensorTableAdapter" Name="smokeSensor" UserDataComponentName="smokeSensorTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MAS_TEAM_3_477ConnectionString1 (Settings)" DbObjectName="MAS_TEAM_3_477.dbo.smokeSensor" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[smokeSensor] WHERE (([smokeId] = @Original_smokeId) AND ([sensorName] = @Original_sensorName) AND ([sensorValue] = @Original_sensorValue) AND ([dateTime] = @Original_dateTime))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_smokeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="smokeId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_sensorName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="sensorName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_sensorValue" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="sensorValue" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_dateTime" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="dateTime" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[smokeSensor] ([smokeId], [sensorName], [sensorValue], [dateTime]) VALUES (@smokeId, @sensorName, @sensorValue, @dateTime);
SELECT smokeId, sensorName, sensorValue, dateTime FROM smokeSensor WHERE (smokeId = @smokeId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@smokeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="smokeId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@sensorName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="sensorName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@sensorValue" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="sensorValue" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@dateTime" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="dateTime" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT smokeId, sensorName, sensorValue, dateTime FROM dbo.smokeSensor</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[smokeSensor] SET [smokeId] = @smokeId, [sensorName] = @sensorName, [sensorValue] = @sensorValue, [dateTime] = @dateTime WHERE (([smokeId] = @Original_smokeId) AND ([sensorName] = @Original_sensorName) AND ([sensorValue] = @Original_sensorValue) AND ([dateTime] = @Original_dateTime));
SELECT smokeId, sensorName, sensorValue, dateTime FROM smokeSensor WHERE (smokeId = @smokeId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@smokeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="smokeId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@sensorName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="sensorName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@sensorValue" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="sensorValue" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@dateTime" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="dateTime" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_smokeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="smokeId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_sensorName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="sensorName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_sensorValue" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="sensorValue" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_dateTime" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="dateTime" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="smokeId" DataSetColumn="smokeId" />
              <Mapping SourceColumn="sensorName" DataSetColumn="sensorName" />
              <Mapping SourceColumn="sensorValue" DataSetColumn="sensorValue" />
              <Mapping SourceColumn="dateTime" DataSetColumn="dateTime" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="tempSensorTableAdapter" GeneratorDataComponentClassName="tempSensorTableAdapter" Name="tempSensor" UserDataComponentName="tempSensorTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MAS_TEAM_3_477ConnectionString1 (Settings)" DbObjectName="MAS_TEAM_3_477.dbo.tempSensor" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[tempSensor] WHERE (([TempId] = @Original_TempId) AND ([sensorName] = @Original_sensorName) AND ([sensorValue] = @Original_sensorValue) AND ([dateTime] = @Original_dateTime))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TempId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TempId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_sensorName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="sensorName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_sensorValue" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="sensorValue" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_dateTime" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="dateTime" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[tempSensor] ([TempId], [sensorName], [sensorValue], [dateTime]) VALUES (@TempId, @sensorName, @sensorValue, @dateTime);
SELECT TempId, sensorName, sensorValue, dateTime FROM tempSensor WHERE (TempId = @TempId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TempId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TempId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@sensorName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="sensorName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@sensorValue" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="sensorValue" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@dateTime" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="dateTime" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT TempId, sensorName, sensorValue, dateTime FROM dbo.tempSensor</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[tempSensor] SET [TempId] = @TempId, [sensorName] = @sensorName, [sensorValue] = @sensorValue, [dateTime] = @dateTime WHERE (([TempId] = @Original_TempId) AND ([sensorName] = @Original_sensorName) AND ([sensorValue] = @Original_sensorValue) AND ([dateTime] = @Original_dateTime));
SELECT TempId, sensorName, sensorValue, dateTime FROM tempSensor WHERE (TempId = @TempId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TempId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TempId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@sensorName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="sensorName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@sensorValue" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="sensorValue" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@dateTime" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="dateTime" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TempId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TempId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_sensorName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="sensorName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_sensorValue" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="sensorValue" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_dateTime" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="dateTime" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="TempId" DataSetColumn="TempId" />
              <Mapping SourceColumn="sensorName" DataSetColumn="sensorName" />
              <Mapping SourceColumn="sensorValue" DataSetColumn="sensorValue" />
              <Mapping SourceColumn="dateTime" DataSetColumn="dateTime" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="usersTableAdapter" GeneratorDataComponentClassName="usersTableAdapter" Name="users" UserDataComponentName="usersTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MAS_TEAM_3_477ConnectionString1 (Settings)" DbObjectName="MAS_TEAM_3_477.dbo.users" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[users] WHERE (([userId] = @Original_userId) AND ([username] = @Original_username) AND ([password] = @Original_password))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_userId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="userId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_username" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="username" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[users] ([userId], [username], [password]) VALUES (@userId, @username, @password);
SELECT userId, username, password FROM users WHERE (userId = @userId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@userId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="userId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@username" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="username" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT userId, username, password FROM dbo.users</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[users] SET [userId] = @userId, [username] = @username, [password] = @password WHERE (([userId] = @Original_userId) AND ([username] = @Original_username) AND ([password] = @Original_password));
SELECT userId, username, password FROM users WHERE (userId = @userId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@userId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="userId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@username" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="username" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_userId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="userId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_username" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="username" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="userId" DataSetColumn="userId" />
              <Mapping SourceColumn="username" DataSetColumn="username" />
              <Mapping SourceColumn="password" DataSetColumn="password" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="MAS_TEAM_3_477DataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="MAS_TEAM_3_477DataSet" msprop:Generator_UserDSName="MAS_TEAM_3_477DataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="alarmLog" msprop:Generator_TableClassName="alarmLogDataTable" msprop:Generator_TableVarName="tablealarmLog" msprop:Generator_TablePropName="alarmLog" msprop:Generator_RowDeletingName="alarmLogRowDeleting" msprop:Generator_RowChangingName="alarmLogRowChanging" msprop:Generator_RowEvHandlerName="alarmLogRowChangeEventHandler" msprop:Generator_RowDeletedName="alarmLogRowDeleted" msprop:Generator_UserTableName="alarmLog" msprop:Generator_RowChangedName="alarmLogRowChanged" msprop:Generator_RowEvArgName="alarmLogRowChangeEvent" msprop:Generator_RowClassName="alarmLogRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="alarmID" msprop:Generator_ColumnVarNameInTable="columnalarmID" msprop:Generator_ColumnPropNameInRow="alarmID" msprop:Generator_ColumnPropNameInTable="alarmIDColumn" msprop:Generator_UserColumnName="alarmID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="25" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="sensorName" msprop:Generator_ColumnVarNameInTable="columnsensorName" msprop:Generator_ColumnPropNameInRow="sensorName" msprop:Generator_ColumnPropNameInTable="sensorNameColumn" msprop:Generator_UserColumnName="sensorName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="sensorVaule" msprop:Generator_ColumnVarNameInTable="columnsensorVaule" msprop:Generator_ColumnPropNameInRow="sensorVaule" msprop:Generator_ColumnPropNameInTable="sensorVauleColumn" msprop:Generator_UserColumnName="sensorVaule">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="threshold" msprop:Generator_ColumnVarNameInTable="columnthreshold" msprop:Generator_ColumnPropNameInRow="threshold" msprop:Generator_ColumnPropNameInTable="thresholdColumn" msprop:Generator_UserColumnName="threshold" type="xs:int" />
              <xs:element name="dateTime" msprop:Generator_ColumnVarNameInTable="columndateTime" msprop:Generator_ColumnPropNameInRow="dateTime" msprop:Generator_ColumnPropNameInTable="dateTimeColumn" msprop:Generator_UserColumnName="dateTime">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="loginLog" msprop:Generator_TableClassName="loginLogDataTable" msprop:Generator_TableVarName="tableloginLog" msprop:Generator_TablePropName="loginLog" msprop:Generator_RowDeletingName="loginLogRowDeleting" msprop:Generator_RowChangingName="loginLogRowChanging" msprop:Generator_RowEvHandlerName="loginLogRowChangeEventHandler" msprop:Generator_RowDeletedName="loginLogRowDeleted" msprop:Generator_UserTableName="loginLog" msprop:Generator_RowChangedName="loginLogRowChanged" msprop:Generator_RowEvArgName="loginLogRowChangeEvent" msprop:Generator_RowClassName="loginLogRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="loginId" msprop:Generator_ColumnVarNameInTable="columnloginId" msprop:Generator_ColumnPropNameInRow="loginId" msprop:Generator_ColumnPropNameInTable="loginIdColumn" msprop:Generator_UserColumnName="loginId" type="xs:int" />
              <xs:element name="username" msprop:Generator_ColumnVarNameInTable="columnusername" msprop:Generator_ColumnPropNameInRow="username" msprop:Generator_ColumnPropNameInTable="usernameColumn" msprop:Generator_UserColumnName="username">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="dateTime" msprop:Generator_ColumnVarNameInTable="columndateTime" msprop:Generator_ColumnPropNameInRow="dateTime" msprop:Generator_ColumnPropNameInTable="dateTimeColumn" msprop:Generator_UserColumnName="dateTime">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="sensorLogs" msprop:Generator_TableClassName="sensorLogsDataTable" msprop:Generator_TableVarName="tablesensorLogs" msprop:Generator_TablePropName="sensorLogs" msprop:Generator_RowDeletingName="sensorLogsRowDeleting" msprop:Generator_RowChangingName="sensorLogsRowChanging" msprop:Generator_RowEvHandlerName="sensorLogsRowChangeEventHandler" msprop:Generator_RowDeletedName="sensorLogsRowDeleted" msprop:Generator_UserTableName="sensorLogs" msprop:Generator_RowChangedName="sensorLogsRowChanged" msprop:Generator_RowEvArgName="sensorLogsRowChangeEvent" msprop:Generator_RowClassName="sensorLogsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="sensorId" msprop:Generator_ColumnVarNameInTable="columnsensorId" msprop:Generator_ColumnPropNameInRow="sensorId" msprop:Generator_ColumnPropNameInTable="sensorIdColumn" msprop:Generator_UserColumnName="sensorId" type="xs:int" />
              <xs:element name="sensorName" msprop:Generator_ColumnVarNameInTable="columnsensorName" msprop:Generator_ColumnPropNameInRow="sensorName" msprop:Generator_ColumnPropNameInTable="sensorNameColumn" msprop:Generator_UserColumnName="sensorName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="sensorValue" msprop:Generator_ColumnVarNameInTable="columnsensorValue" msprop:Generator_ColumnPropNameInRow="sensorValue" msprop:Generator_ColumnPropNameInTable="sensorValueColumn" msprop:Generator_UserColumnName="sensorValue">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="dateTime" msprop:Generator_ColumnVarNameInTable="columndateTime" msprop:Generator_ColumnPropNameInRow="dateTime" msprop:Generator_ColumnPropNameInTable="dateTimeColumn" msprop:Generator_UserColumnName="dateTime">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="threshold" msprop:Generator_TableClassName="thresholdDataTable" msprop:Generator_TableVarName="tablethreshold" msprop:Generator_TablePropName="threshold" msprop:Generator_RowDeletingName="thresholdRowDeleting" msprop:Generator_RowChangingName="thresholdRowChanging" msprop:Generator_RowEvHandlerName="thresholdRowChangeEventHandler" msprop:Generator_RowDeletedName="thresholdRowDeleted" msprop:Generator_UserTableName="threshold" msprop:Generator_RowChangedName="thresholdRowChanged" msprop:Generator_RowEvArgName="thresholdRowChangeEvent" msprop:Generator_RowClassName="thresholdRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="threshId" msprop:Generator_ColumnVarNameInTable="columnthreshId" msprop:Generator_ColumnPropNameInRow="threshId" msprop:Generator_ColumnPropNameInTable="threshIdColumn" msprop:Generator_UserColumnName="threshId" type="xs:int" />
              <xs:element name="threholdName" msprop:Generator_ColumnVarNameInTable="columnthreholdName" msprop:Generator_ColumnPropNameInRow="threholdName" msprop:Generator_ColumnPropNameInTable="threholdNameColumn" msprop:Generator_UserColumnName="threholdName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="thresholdVaule" msprop:Generator_ColumnVarNameInTable="columnthresholdVaule" msprop:Generator_ColumnPropNameInRow="thresholdVaule" msprop:Generator_ColumnPropNameInTable="thresholdVauleColumn" msprop:Generator_UserColumnName="thresholdVaule">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="dateTime" msprop:Generator_ColumnVarNameInTable="columndateTime" msprop:Generator_ColumnPropNameInRow="dateTime" msprop:Generator_ColumnPropNameInTable="dateTimeColumn" msprop:Generator_UserColumnName="dateTime">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="userName" msprop:Generator_ColumnVarNameInTable="columnuserName" msprop:Generator_ColumnPropNameInRow="userName" msprop:Generator_ColumnPropNameInTable="userNameColumn" msprop:Generator_UserColumnName="userName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="humiditySensor" msprop:Generator_TableClassName="humiditySensorDataTable" msprop:Generator_TableVarName="tablehumiditySensor" msprop:Generator_RowChangedName="humiditySensorRowChanged" msprop:Generator_TablePropName="humiditySensor" msprop:Generator_RowDeletingName="humiditySensorRowDeleting" msprop:Generator_RowChangingName="humiditySensorRowChanging" msprop:Generator_RowEvHandlerName="humiditySensorRowChangeEventHandler" msprop:Generator_RowDeletedName="humiditySensorRowDeleted" msprop:Generator_RowClassName="humiditySensorRow" msprop:Generator_UserTableName="humiditySensor" msprop:Generator_RowEvArgName="humiditySensorRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="humidityId" msprop:Generator_ColumnVarNameInTable="columnhumidityId" msprop:Generator_ColumnPropNameInRow="humidityId" msprop:Generator_ColumnPropNameInTable="humidityIdColumn" msprop:Generator_UserColumnName="humidityId" type="xs:int" />
              <xs:element name="sensorName" msprop:Generator_ColumnVarNameInTable="columnsensorName" msprop:Generator_ColumnPropNameInRow="sensorName" msprop:Generator_ColumnPropNameInTable="sensorNameColumn" msprop:Generator_UserColumnName="sensorName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="sensorValue" msprop:Generator_ColumnVarNameInTable="columnsensorValue" msprop:Generator_ColumnPropNameInRow="sensorValue" msprop:Generator_ColumnPropNameInTable="sensorValueColumn" msprop:Generator_UserColumnName="sensorValue">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="dateTime" msprop:Generator_ColumnVarNameInTable="columndateTime" msprop:Generator_ColumnPropNameInRow="dateTime" msprop:Generator_ColumnPropNameInTable="dateTimeColumn" msprop:Generator_UserColumnName="dateTime">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="smokeSensor" msprop:Generator_TableClassName="smokeSensorDataTable" msprop:Generator_TableVarName="tablesmokeSensor" msprop:Generator_RowChangedName="smokeSensorRowChanged" msprop:Generator_TablePropName="smokeSensor" msprop:Generator_RowDeletingName="smokeSensorRowDeleting" msprop:Generator_RowChangingName="smokeSensorRowChanging" msprop:Generator_RowEvHandlerName="smokeSensorRowChangeEventHandler" msprop:Generator_RowDeletedName="smokeSensorRowDeleted" msprop:Generator_RowClassName="smokeSensorRow" msprop:Generator_UserTableName="smokeSensor" msprop:Generator_RowEvArgName="smokeSensorRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="smokeId" msprop:Generator_ColumnVarNameInTable="columnsmokeId" msprop:Generator_ColumnPropNameInRow="smokeId" msprop:Generator_ColumnPropNameInTable="smokeIdColumn" msprop:Generator_UserColumnName="smokeId" type="xs:int" />
              <xs:element name="sensorName" msprop:Generator_ColumnVarNameInTable="columnsensorName" msprop:Generator_ColumnPropNameInRow="sensorName" msprop:Generator_ColumnPropNameInTable="sensorNameColumn" msprop:Generator_UserColumnName="sensorName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="sensorValue" msprop:Generator_ColumnVarNameInTable="columnsensorValue" msprop:Generator_ColumnPropNameInRow="sensorValue" msprop:Generator_ColumnPropNameInTable="sensorValueColumn" msprop:Generator_UserColumnName="sensorValue">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="dateTime" msprop:Generator_ColumnVarNameInTable="columndateTime" msprop:Generator_ColumnPropNameInRow="dateTime" msprop:Generator_ColumnPropNameInTable="dateTimeColumn" msprop:Generator_UserColumnName="dateTime">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="tempSensor" msprop:Generator_TableClassName="tempSensorDataTable" msprop:Generator_TableVarName="tabletempSensor" msprop:Generator_RowChangedName="tempSensorRowChanged" msprop:Generator_TablePropName="tempSensor" msprop:Generator_RowDeletingName="tempSensorRowDeleting" msprop:Generator_RowChangingName="tempSensorRowChanging" msprop:Generator_RowEvHandlerName="tempSensorRowChangeEventHandler" msprop:Generator_RowDeletedName="tempSensorRowDeleted" msprop:Generator_RowClassName="tempSensorRow" msprop:Generator_UserTableName="tempSensor" msprop:Generator_RowEvArgName="tempSensorRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="TempId" msprop:Generator_ColumnVarNameInTable="columnTempId" msprop:Generator_ColumnPropNameInRow="TempId" msprop:Generator_ColumnPropNameInTable="TempIdColumn" msprop:Generator_UserColumnName="TempId" type="xs:int" />
              <xs:element name="sensorName" msprop:Generator_ColumnVarNameInTable="columnsensorName" msprop:Generator_ColumnPropNameInRow="sensorName" msprop:Generator_ColumnPropNameInTable="sensorNameColumn" msprop:Generator_UserColumnName="sensorName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="sensorValue" msprop:Generator_ColumnVarNameInTable="columnsensorValue" msprop:Generator_ColumnPropNameInRow="sensorValue" msprop:Generator_ColumnPropNameInTable="sensorValueColumn" msprop:Generator_UserColumnName="sensorValue">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="dateTime" msprop:Generator_ColumnVarNameInTable="columndateTime" msprop:Generator_ColumnPropNameInRow="dateTime" msprop:Generator_ColumnPropNameInTable="dateTimeColumn" msprop:Generator_UserColumnName="dateTime">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="users" msprop:Generator_TableClassName="usersDataTable" msprop:Generator_TableVarName="tableusers" msprop:Generator_TablePropName="users" msprop:Generator_RowDeletingName="usersRowDeleting" msprop:Generator_RowChangingName="usersRowChanging" msprop:Generator_RowEvHandlerName="usersRowChangeEventHandler" msprop:Generator_RowDeletedName="usersRowDeleted" msprop:Generator_UserTableName="users" msprop:Generator_RowChangedName="usersRowChanged" msprop:Generator_RowEvArgName="usersRowChangeEvent" msprop:Generator_RowClassName="usersRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="userId" msprop:Generator_ColumnVarNameInTable="columnuserId" msprop:Generator_ColumnPropNameInRow="userId" msprop:Generator_ColumnPropNameInTable="userIdColumn" msprop:Generator_UserColumnName="userId" type="xs:int" />
              <xs:element name="username" msprop:Generator_ColumnVarNameInTable="columnusername" msprop:Generator_ColumnPropNameInRow="username" msprop:Generator_ColumnPropNameInTable="usernameColumn" msprop:Generator_UserColumnName="username">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="password" msprop:Generator_ColumnVarNameInTable="columnpassword" msprop:Generator_ColumnPropNameInRow="password" msprop:Generator_ColumnPropNameInTable="passwordColumn" msprop:Generator_UserColumnName="password">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:alarmLog" />
      <xs:field xpath="mstns:alarmID" />
    </xs:unique>
    <xs:unique name="loginLog_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:loginLog" />
      <xs:field xpath="mstns:loginId" />
    </xs:unique>
    <xs:unique name="sensorLogs_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:sensorLogs" />
      <xs:field xpath="mstns:sensorId" />
    </xs:unique>
    <xs:unique name="threshold_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:threshold" />
      <xs:field xpath="mstns:threshId" />
    </xs:unique>
    <xs:unique name="humiditySensor_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:humiditySensor" />
      <xs:field xpath="mstns:humidityId" />
    </xs:unique>
    <xs:unique name="smokeSensor_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:smokeSensor" />
      <xs:field xpath="mstns:smokeId" />
    </xs:unique>
    <xs:unique name="tempSensor_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:tempSensor" />
      <xs:field xpath="mstns:TempId" />
    </xs:unique>
    <xs:unique name="users_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:users" />
      <xs:field xpath="mstns:userId" />
    </xs:unique>
  </xs:element>
</xs:schema>